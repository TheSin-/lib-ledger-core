# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from amount.djinni, big_int.djinni, core.djinni, crypto.djinni, currency.djinni, database.djinni, dynamic.djinni, emitter.djinni, errors.djinni, events.djinni, http_client.djinni, locale.djinni, logger.djinni, path_resolver.djinni, preferences.djinni, random.djinni, secp256k1.djinni, thread_dispatcher.djinni, wallet.djinni, websocket_client.djinni
---
name: Account
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Account'
  header: '"Account.hpp"'
  byValue: false
objc:
  typename: 'Account'
  pointer: true
  hash: '%s.hash'
  boxed: 'Account'
  header: '"Account.h"'
objcpp:
  translator: '::djinni_generated::Account'
  header: '"Account+Private.h"'
java:
  reference: true
  typename: 'Account'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Account'
jni:
  translator: '::djinni_generated::Account'
  header: '"Account.hpp"'
  typename: jobject
  typeSignature: 'LAccount;'
---
name: AccountCreationInfo
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::AccountCreationInfo'
  header: '"AccountCreationInfo.hpp"'
  byValue: false
objc:
  typename: 'AccountCreationInfo'
  pointer: true
  hash: '%s.hash'
  boxed: 'AccountCreationInfo'
  header: '"AccountCreationInfo.h"'
objcpp:
  translator: '::djinni_generated::AccountCreationInfo'
  header: '"AccountCreationInfo+Private.h"'
java:
  reference: true
  typename: 'AccountCreationInfo'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'AccountCreationInfo'
jni:
  translator: '::djinni_generated::AccountCreationInfo'
  header: '"AccountCreationInfo.hpp"'
  typename: jobject
  typeSignature: 'LAccountCreationInfo;'
---
name: Address
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Address'
  header: '"Address.hpp"'
  byValue: false
objc:
  typename: 'Address'
  pointer: true
  hash: '%s.hash'
  boxed: 'Address'
  header: '"Address.h"'
objcpp:
  translator: '::djinni_generated::Address'
  header: '"Address+Private.h"'
java:
  reference: true
  typename: 'Address'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Address'
jni:
  translator: '::djinni_generated::Address'
  header: '"Address.hpp"'
  typename: jobject
  typeSignature: 'LAddress;'
---
name: Amount
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Amount'
  header: '"Amount.hpp"'
  byValue: false
objc:
  typename: 'Amount'
  pointer: true
  hash: '%s.hash'
  boxed: 'Amount'
  header: '"Amount.h"'
objcpp:
  translator: '::djinni_generated::Amount'
  header: '"Amount+Private.h"'
java:
  reference: true
  typename: 'Amount'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Amount'
jni:
  translator: '::djinni_generated::Amount'
  header: '"Amount.hpp"'
  typename: jobject
  typeSignature: 'LAmount;'
---
name: BigInt
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::BigInt'
  header: '"BigInt.hpp"'
  byValue: false
objc:
  typename: 'BigInt'
  pointer: true
  hash: '%s.hash'
  boxed: 'BigInt'
  header: '"BigInt.h"'
objcpp:
  translator: '::djinni_generated::BigInt'
  header: '"BigInt+Private.h"'
java:
  reference: true
  typename: 'BigInt'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'BigInt'
jni:
  translator: '::djinni_generated::BigInt'
  header: '"BigInt.hpp"'
  typename: jobject
  typeSignature: 'LBigInt;'
---
name: Block
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Block'
  header: '"Block.hpp"'
  byValue: false
objc:
  typename: 'Block'
  pointer: true
  hash: '%s.hash'
  boxed: 'Block'
  header: '"Block.h"'
objcpp:
  translator: '::djinni_generated::Block'
  header: '"Block+Private.h"'
java:
  reference: true
  typename: 'Block'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Block'
jni:
  translator: '::djinni_generated::Block'
  header: '"Block.hpp"'
  typename: jobject
  typeSignature: 'LBlock;'
---
name: Currency
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Currency'
  header: '"Currency.hpp"'
  byValue: false
objc:
  typename: 'Currency'
  pointer: true
  hash: '%s.hash'
  boxed: 'Currency'
  header: '"Currency.h"'
objcpp:
  translator: '::djinni_generated::Currency'
  header: '"Currency+Private.h"'
java:
  reference: true
  typename: 'Currency'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Currency'
jni:
  translator: '::djinni_generated::Currency'
  header: '"Currency.hpp"'
  typename: jobject
  typeSignature: 'LCurrency;'
---
name: CurrencyUnit
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::CurrencyUnit'
  header: '"CurrencyUnit.hpp"'
  byValue: false
objc:
  typename: 'CurrencyUnit'
  pointer: true
  hash: '%s.hash'
  boxed: 'CurrencyUnit'
  header: '"CurrencyUnit.h"'
objcpp:
  translator: '::djinni_generated::CurrencyUnit'
  header: '"CurrencyUnit+Private.h"'
java:
  reference: true
  typename: 'CurrencyUnit'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'CurrencyUnit'
jni:
  translator: '::djinni_generated::CurrencyUnit'
  header: '"CurrencyUnit.hpp"'
  typename: jobject
  typeSignature: 'LCurrencyUnit;'
---
name: DatabaseBackend
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseBackend'
  header: '"DatabaseBackend.hpp"'
  byValue: false
objc:
  typename: 'DatabaseBackend'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseBackend'
  header: '"DatabaseBackend.h"'
objcpp:
  translator: '::djinni_generated::DatabaseBackend'
  header: '"DatabaseBackend+Private.h"'
java:
  reference: true
  typename: 'DatabaseBackend'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseBackend'
jni:
  translator: '::djinni_generated::DatabaseBackend'
  header: '"DatabaseBackend.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseBackend;'
---
name: DatabaseBlob
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseBlob'
  header: '"DatabaseBlob.hpp"'
  byValue: false
objc:
  typename: 'DatabaseBlob'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseBlob'
  header: '"DatabaseBlob.h"'
objcpp:
  translator: '::djinni_generated::DatabaseBlob'
  header: '"DatabaseBlob+Private.h"'
java:
  reference: true
  typename: 'DatabaseBlob'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseBlob'
jni:
  translator: '::djinni_generated::DatabaseBlob'
  header: '"DatabaseBlob.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseBlob;'
---
name: DatabaseColumn
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseColumn'
  header: '"DatabaseColumn.hpp"'
  byValue: false
objc:
  typename: 'DatabaseColumn'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseColumn'
  header: '"DatabaseColumn.h"'
objcpp:
  translator: '::djinni_generated::DatabaseColumn'
  header: '"DatabaseColumn+Private.h"'
java:
  reference: true
  typename: 'DatabaseColumn'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseColumn'
jni:
  translator: '::djinni_generated::DatabaseColumn'
  header: '"DatabaseColumn.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseColumn;'
---
name: DatabaseConnection
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseConnection'
  header: '"DatabaseConnection.hpp"'
  byValue: false
objc:
  typename: 'DatabaseConnection'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseConnection'
  header: '"DatabaseConnection.h"'
objcpp:
  translator: '::djinni_generated::DatabaseConnection'
  header: '"DatabaseConnection+Private.h"'
java:
  reference: true
  typename: 'DatabaseConnection'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseConnection'
jni:
  translator: '::djinni_generated::DatabaseConnection'
  header: '"DatabaseConnection.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseConnection;'
---
name: DatabaseConnectionPool
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseConnectionPool'
  header: '"DatabaseConnectionPool.hpp"'
  byValue: false
objc:
  typename: 'DatabaseConnectionPool'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseConnectionPool'
  header: '"DatabaseConnectionPool.h"'
objcpp:
  translator: '::djinni_generated::DatabaseConnectionPool'
  header: '"DatabaseConnectionPool+Private.h"'
java:
  reference: true
  typename: 'DatabaseConnectionPool'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseConnectionPool'
jni:
  translator: '::djinni_generated::DatabaseConnectionPool'
  header: '"DatabaseConnectionPool.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseConnectionPool;'
---
name: DatabaseEngine
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseEngine'
  header: '"DatabaseEngine.hpp"'
  byValue: false
objc:
  typename: 'DatabaseEngine'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseEngine'
  header: '"DatabaseEngine.h"'
objcpp:
  translator: '::djinni_generated::DatabaseEngine'
  header: '"DatabaseEngine+Private.h"'
java:
  reference: true
  typename: 'DatabaseEngine'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseEngine'
jni:
  translator: '::djinni_generated::DatabaseEngine'
  header: '"DatabaseEngine.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseEngine;'
---
name: DatabaseError
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseError'
  header: '"DatabaseError.hpp"'
  byValue: false
objc:
  typename: 'DatabaseError'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseError'
  header: '"DatabaseError.h"'
objcpp:
  translator: '::djinni_generated::DatabaseError'
  header: '"DatabaseError+Private.h"'
java:
  reference: true
  typename: 'DatabaseError'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseError'
jni:
  translator: '::djinni_generated::DatabaseError'
  header: '"DatabaseError.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseError;'
---
name: DatabaseResultRow
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseResultRow'
  header: '"DatabaseResultRow.hpp"'
  byValue: false
objc:
  typename: 'DatabaseResultRow'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseResultRow'
  header: '"DatabaseResultRow.h"'
objcpp:
  translator: '::djinni_generated::DatabaseResultRow'
  header: '"DatabaseResultRow+Private.h"'
java:
  reference: true
  typename: 'DatabaseResultRow'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseResultRow'
jni:
  translator: '::djinni_generated::DatabaseResultRow'
  header: '"DatabaseResultRow.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseResultRow;'
---
name: DatabaseResultSet
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseResultSet'
  header: '"DatabaseResultSet.hpp"'
  byValue: false
objc:
  typename: 'DatabaseResultSet'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseResultSet'
  header: '"DatabaseResultSet.h"'
objcpp:
  translator: '::djinni_generated::DatabaseResultSet'
  header: '"DatabaseResultSet+Private.h"'
java:
  reference: true
  typename: 'DatabaseResultSet'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseResultSet'
jni:
  translator: '::djinni_generated::DatabaseResultSet'
  header: '"DatabaseResultSet.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseResultSet;'
---
name: DatabaseStatement
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseStatement'
  header: '"DatabaseStatement.hpp"'
  byValue: false
objc:
  typename: 'DatabaseStatement'
  pointer: true
  hash: '%s.hash'
  boxed: 'DatabaseStatement'
  header: '"DatabaseStatement.h"'
objcpp:
  translator: '::djinni_generated::DatabaseStatement'
  header: '"DatabaseStatement+Private.h"'
java:
  reference: true
  typename: 'DatabaseStatement'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseStatement'
jni:
  translator: '::djinni_generated::DatabaseStatement'
  header: '"DatabaseStatement.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseStatement;'
---
name: DatabaseValueType
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DatabaseValueType'
  header: '"DatabaseValueType.hpp"'
  byValue: true
objc:
  typename: 'DatabaseValueType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"DatabaseValueType.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::DatabaseValueType, DatabaseValueType>'
  header: '"DatabaseValueType+Private.h"'
java:
  reference: true
  typename: 'DatabaseValueType'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DatabaseValueType'
jni:
  translator: '::djinni_generated::DatabaseValueType'
  header: '"DatabaseValueType.hpp"'
  typename: jobject
  typeSignature: 'LDatabaseValueType;'
---
name: DerivationPath
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DerivationPath'
  header: '"DerivationPath.hpp"'
  byValue: false
objc:
  typename: 'DerivationPath'
  pointer: true
  hash: '%s.hash'
  boxed: 'DerivationPath'
  header: '"DerivationPath.h"'
objcpp:
  translator: '::djinni_generated::DerivationPath'
  header: '"DerivationPath+Private.h"'
java:
  reference: true
  typename: 'DerivationPath'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DerivationPath'
jni:
  translator: '::djinni_generated::DerivationPath'
  header: '"DerivationPath.hpp"'
  typename: jobject
  typeSignature: 'LDerivationPath;'
---
name: DynamicArray
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicArray'
  header: '"DynamicArray.hpp"'
  byValue: false
objc:
  typename: 'DynamicArray'
  pointer: true
  hash: '%s.hash'
  boxed: 'DynamicArray'
  header: '"DynamicArray.h"'
objcpp:
  translator: '::djinni_generated::DynamicArray'
  header: '"DynamicArray+Private.h"'
java:
  reference: true
  typename: 'DynamicArray'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicArray'
jni:
  translator: '::djinni_generated::DynamicArray'
  header: '"DynamicArray.hpp"'
  typename: jobject
  typeSignature: 'LDynamicArray;'
---
name: DynamicObject
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicObject'
  header: '"DynamicObject.hpp"'
  byValue: false
objc:
  typename: 'DynamicObject'
  pointer: true
  hash: '%s.hash'
  boxed: 'DynamicObject'
  header: '"DynamicObject.h"'
objcpp:
  translator: '::djinni_generated::DynamicObject'
  header: '"DynamicObject+Private.h"'
java:
  reference: true
  typename: 'DynamicObject'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicObject'
jni:
  translator: '::djinni_generated::DynamicObject'
  header: '"DynamicObject.hpp"'
  typename: jobject
  typeSignature: 'LDynamicObject;'
---
name: DynamicType
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicType'
  header: '"DynamicType.hpp"'
  byValue: true
objc:
  typename: 'DynamicType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"DynamicType.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::DynamicType, DynamicType>'
  header: '"DynamicType+Private.h"'
java:
  reference: true
  typename: 'DynamicType'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicType'
jni:
  translator: '::djinni_generated::DynamicType'
  header: '"DynamicType.hpp"'
  typename: jobject
  typeSignature: 'LDynamicType;'
---
name: Error
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Error'
  header: '"Error.hpp"'
  byValue: false
objc:
  typename: 'Error'
  pointer: true
  hash: '%s.hash'
  boxed: 'Error'
  header: '"Error.h"'
objcpp:
  translator: '::djinni_generated::Error'
  header: '"Error+Private.h"'
java:
  reference: true
  typename: 'Error'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Error'
jni:
  translator: '::djinni_generated::Error'
  header: '"Error.hpp"'
  typename: jobject
  typeSignature: 'LError;'
---
name: ErrorCode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ErrorCode'
  header: '"ErrorCode.hpp"'
  byValue: true
objc:
  typename: 'ErrorCode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"ErrorCode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::ErrorCode, ErrorCode>'
  header: '"ErrorCode+Private.h"'
java:
  reference: true
  typename: 'ErrorCode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ErrorCode'
jni:
  translator: '::djinni_generated::ErrorCode'
  header: '"ErrorCode.hpp"'
  typename: jobject
  typeSignature: 'LErrorCode;'
---
name: Event
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Event'
  header: '"Event.hpp"'
  byValue: false
objc:
  typename: 'Event'
  pointer: true
  hash: '%s.hash'
  boxed: 'Event'
  header: '"Event.h"'
objcpp:
  translator: '::djinni_generated::Event'
  header: '"Event+Private.h"'
java:
  reference: true
  typename: 'Event'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Event'
jni:
  translator: '::djinni_generated::Event'
  header: '"Event.hpp"'
  typename: jobject
  typeSignature: 'LEvent;'
---
name: EventBus
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventBus'
  header: '"EventBus.hpp"'
  byValue: false
objc:
  typename: 'EventBus'
  pointer: true
  hash: '%s.hash'
  boxed: 'EventBus'
  header: '"EventBus.h"'
objcpp:
  translator: '::djinni_generated::EventBus'
  header: '"EventBus+Private.h"'
java:
  reference: true
  typename: 'EventBus'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventBus'
jni:
  translator: '::djinni_generated::EventBus'
  header: '"EventBus.hpp"'
  typename: jobject
  typeSignature: 'LEventBus;'
---
name: EventCode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventCode'
  header: '"EventCode.hpp"'
  byValue: true
objc:
  typename: 'EventCode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"EventCode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::EventCode, EventCode>'
  header: '"EventCode+Private.h"'
java:
  reference: true
  typename: 'EventCode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventCode'
jni:
  translator: '::djinni_generated::EventCode'
  header: '"EventCode.hpp"'
  typename: jobject
  typeSignature: 'LEventCode;'
---
name: EventPublisher
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventPublisher'
  header: '"EventPublisher.hpp"'
  byValue: false
objc:
  typename: 'EventPublisher'
  pointer: true
  hash: '%s.hash'
  boxed: 'EventPublisher'
  header: '"EventPublisher.h"'
objcpp:
  translator: '::djinni_generated::EventPublisher'
  header: '"EventPublisher+Private.h"'
java:
  reference: true
  typename: 'EventPublisher'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventPublisher'
jni:
  translator: '::djinni_generated::EventPublisher'
  header: '"EventPublisher.hpp"'
  typename: jobject
  typeSignature: 'LEventPublisher;'
---
name: EventReceiver
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventReceiver'
  header: '"EventReceiver.hpp"'
  byValue: false
objc:
  typename: 'EventReceiver'
  pointer: true
  hash: '%s.hash'
  boxed: 'EventReceiver'
  header: '"EventReceiver.h"'
objcpp:
  translator: '::djinni_generated::EventReceiver'
  header: '"EventReceiver+Private.h"'
java:
  reference: true
  typename: 'EventReceiver'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventReceiver'
jni:
  translator: '::djinni_generated::EventReceiver'
  header: '"EventReceiver.hpp"'
  typename: jobject
  typeSignature: 'LEventReceiver;'
---
name: ExecutionContext
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ExecutionContext'
  header: '"ExecutionContext.hpp"'
  byValue: false
objc:
  typename: 'ExecutionContext'
  pointer: true
  hash: '%s.hash'
  boxed: 'ExecutionContext'
  header: '"ExecutionContext.h"'
objcpp:
  translator: '::djinni_generated::ExecutionContext'
  header: '"ExecutionContext+Private.h"'
java:
  reference: true
  typename: 'ExecutionContext'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ExecutionContext'
jni:
  translator: '::djinni_generated::ExecutionContext'
  header: '"ExecutionContext.hpp"'
  typename: jobject
  typeSignature: 'LExecutionContext;'
---
name: ExtendedKeyAccountCreationInfo
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ExtendedKeyAccountCreationInfo'
  header: '"ExtendedKeyAccountCreationInfo.hpp"'
  byValue: false
objc:
  typename: 'ExtendedKeyAccountCreationInfo'
  pointer: true
  hash: '%s.hash'
  boxed: 'ExtendedKeyAccountCreationInfo'
  header: '"ExtendedKeyAccountCreationInfo.h"'
objcpp:
  translator: '::djinni_generated::ExtendedKeyAccountCreationInfo'
  header: '"ExtendedKeyAccountCreationInfo+Private.h"'
java:
  reference: true
  typename: 'ExtendedKeyAccountCreationInfo'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ExtendedKeyAccountCreationInfo'
jni:
  translator: '::djinni_generated::ExtendedKeyAccountCreationInfo'
  header: '"ExtendedKeyAccountCreationInfo.hpp"'
  typename: jobject
  typeSignature: 'LExtendedKeyAccountCreationInfo;'
---
name: FormatRules
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::FormatRules'
  header: '"FormatRules.hpp"'
  byValue: false
objc:
  typename: 'FormatRules'
  pointer: true
  hash: '%s.hash'
  boxed: 'FormatRules'
  header: '"FormatRules.h"'
objcpp:
  translator: '::djinni_generated::FormatRules'
  header: '"FormatRules+Private.h"'
java:
  reference: true
  typename: 'FormatRules'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'FormatRules'
jni:
  translator: '::djinni_generated::FormatRules'
  header: '"FormatRules.hpp"'
  typename: jobject
  typeSignature: 'LFormatRules;'
---
name: HashAlgorithmHelper
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::HashAlgorithmHelper'
  header: '"HashAlgorithmHelper.hpp"'
  byValue: false
objc:
  typename: 'HashAlgorithmHelper'
  pointer: true
  hash: '%s.hash'
  boxed: 'HashAlgorithmHelper'
  header: '"HashAlgorithmHelper.h"'
objcpp:
  translator: '::djinni_generated::HashAlgorithmHelper'
  header: '"HashAlgorithmHelper+Private.h"'
java:
  reference: true
  typename: 'HashAlgorithmHelper'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'HashAlgorithmHelper'
jni:
  translator: '::djinni_generated::HashAlgorithmHelper'
  header: '"HashAlgorithmHelper.hpp"'
  typename: jobject
  typeSignature: 'LHashAlgorithmHelper;'
---
name: HttpClient
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::HttpClient'
  header: '"HttpClient.hpp"'
  byValue: false
objc:
  typename: 'HttpClient'
  pointer: true
  hash: '%s.hash'
  boxed: 'HttpClient'
  header: '"HttpClient.h"'
objcpp:
  translator: '::djinni_generated::HttpClient'
  header: '"HttpClient+Private.h"'
java:
  reference: true
  typename: 'HttpClient'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'HttpClient'
jni:
  translator: '::djinni_generated::HttpClient'
  header: '"HttpClient.hpp"'
  typename: jobject
  typeSignature: 'LHttpClient;'
---
name: HttpMethod
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::HttpMethod'
  header: '"HttpMethod.hpp"'
  byValue: true
objc:
  typename: 'HttpMethod'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"HttpMethod.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::HttpMethod, HttpMethod>'
  header: '"HttpMethod+Private.h"'
java:
  reference: true
  typename: 'HttpMethod'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'HttpMethod'
jni:
  translator: '::djinni_generated::HttpMethod'
  header: '"HttpMethod.hpp"'
  typename: jobject
  typeSignature: 'LHttpMethod;'
---
name: HttpReadBodyResult
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::HttpReadBodyResult'
  header: '"HttpReadBodyResult.hpp"'
  byValue: false
objc:
  typename: 'HttpReadBodyResult'
  pointer: true
  hash: '%s.hash'
  boxed: 'HttpReadBodyResult'
  header: '"HttpReadBodyResult.h"'
objcpp:
  translator: '::djinni_generated::HttpReadBodyResult'
  header: '"HttpReadBodyResult+Private.h"'
java:
  reference: true
  typename: 'HttpReadBodyResult'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'HttpReadBodyResult'
jni:
  translator: '::djinni_generated::HttpReadBodyResult'
  header: '"HttpReadBodyResult.hpp"'
  typename: jobject
  typeSignature: 'LHttpReadBodyResult;'
---
name: HttpRequest
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::HttpRequest'
  header: '"HttpRequest.hpp"'
  byValue: false
objc:
  typename: 'HttpRequest'
  pointer: true
  hash: '%s.hash'
  boxed: 'HttpRequest'
  header: '"HttpRequest.h"'
objcpp:
  translator: '::djinni_generated::HttpRequest'
  header: '"HttpRequest+Private.h"'
java:
  reference: true
  typename: 'HttpRequest'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'HttpRequest'
jni:
  translator: '::djinni_generated::HttpRequest'
  header: '"HttpRequest.hpp"'
  typename: jobject
  typeSignature: 'LHttpRequest;'
---
name: HttpUrlConnection
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::HttpUrlConnection'
  header: '"HttpUrlConnection.hpp"'
  byValue: false
objc:
  typename: 'HttpUrlConnection'
  pointer: true
  hash: '%s.hash'
  boxed: 'HttpUrlConnection'
  header: '"HttpUrlConnection.h"'
objcpp:
  translator: '::djinni_generated::HttpUrlConnection'
  header: '"HttpUrlConnection+Private.h"'
java:
  reference: true
  typename: 'HttpUrlConnection'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'HttpUrlConnection'
jni:
  translator: '::djinni_generated::HttpUrlConnection'
  header: '"HttpUrlConnection.hpp"'
  typename: jobject
  typeSignature: 'LHttpUrlConnection;'
---
name: LedgerCore
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::LedgerCore'
  header: '"LedgerCore.hpp"'
  byValue: false
objc:
  typename: 'LedgerCore'
  pointer: true
  hash: '%s.hash'
  boxed: 'LedgerCore'
  header: '"LedgerCore.h"'
objcpp:
  translator: '::djinni_generated::LedgerCore'
  header: '"LedgerCore+Private.h"'
java:
  reference: true
  typename: 'LedgerCore'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'LedgerCore'
jni:
  translator: '::djinni_generated::LedgerCore'
  header: '"LedgerCore.hpp"'
  typename: jobject
  typeSignature: 'LLedgerCore;'
---
name: Locale
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Locale'
  header: '"Locale.hpp"'
  byValue: false
objc:
  typename: 'Locale'
  pointer: true
  hash: '%s.hash'
  boxed: 'Locale'
  header: '"Locale.h"'
objcpp:
  translator: '::djinni_generated::Locale'
  header: '"Locale+Private.h"'
java:
  reference: true
  typename: 'Locale'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Locale'
jni:
  translator: '::djinni_generated::Locale'
  header: '"Locale.hpp"'
  typename: jobject
  typeSignature: 'LLocale;'
---
name: Lock
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Lock'
  header: '"Lock.hpp"'
  byValue: false
objc:
  typename: 'Lock'
  pointer: true
  hash: '%s.hash'
  boxed: 'Lock'
  header: '"Lock.h"'
objcpp:
  translator: '::djinni_generated::Lock'
  header: '"Lock+Private.h"'
java:
  reference: true
  typename: 'Lock'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Lock'
jni:
  translator: '::djinni_generated::Lock'
  header: '"Lock.hpp"'
  typename: jobject
  typeSignature: 'LLock;'
---
name: LogPrinter
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::LogPrinter'
  header: '"LogPrinter.hpp"'
  byValue: false
objc:
  typename: 'LogPrinter'
  pointer: true
  hash: '%s.hash'
  boxed: 'LogPrinter'
  header: '"LogPrinter.h"'
objcpp:
  translator: '::djinni_generated::LogPrinter'
  header: '"LogPrinter+Private.h"'
java:
  reference: true
  typename: 'LogPrinter'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'LogPrinter'
jni:
  translator: '::djinni_generated::LogPrinter'
  header: '"LogPrinter.hpp"'
  typename: jobject
  typeSignature: 'LLogPrinter;'
---
name: Logger
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Logger'
  header: '"Logger.hpp"'
  byValue: false
objc:
  typename: 'Logger'
  pointer: true
  hash: '%s.hash'
  boxed: 'Logger'
  header: '"Logger.h"'
objcpp:
  translator: '::djinni_generated::Logger'
  header: '"Logger+Private.h"'
java:
  reference: true
  typename: 'Logger'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Logger'
jni:
  translator: '::djinni_generated::Logger'
  header: '"Logger.hpp"'
  typename: jobject
  typeSignature: 'LLogger;'
---
name: Operation
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Operation'
  header: '"Operation.hpp"'
  byValue: false
objc:
  typename: 'Operation'
  pointer: true
  hash: '%s.hash'
  boxed: 'Operation'
  header: '"Operation.h"'
objcpp:
  translator: '::djinni_generated::Operation'
  header: '"Operation+Private.h"'
java:
  reference: true
  typename: 'Operation'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Operation'
jni:
  translator: '::djinni_generated::Operation'
  header: '"Operation.hpp"'
  typename: jobject
  typeSignature: 'LOperation;'
---
name: OperationOrderKey
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::OperationOrderKey'
  header: '"OperationOrderKey.hpp"'
  byValue: true
objc:
  typename: 'OperationOrderKey'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"OperationOrderKey.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::OperationOrderKey, OperationOrderKey>'
  header: '"OperationOrderKey+Private.h"'
java:
  reference: true
  typename: 'OperationOrderKey'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'OperationOrderKey'
jni:
  translator: '::djinni_generated::OperationOrderKey'
  header: '"OperationOrderKey.hpp"'
  typename: jobject
  typeSignature: 'LOperationOrderKey;'
---
name: OperationQuery
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::OperationQuery'
  header: '"OperationQuery.hpp"'
  byValue: false
objc:
  typename: 'OperationQuery'
  pointer: true
  hash: '%s.hash'
  boxed: 'OperationQuery'
  header: '"OperationQuery.h"'
objcpp:
  translator: '::djinni_generated::OperationQuery'
  header: '"OperationQuery+Private.h"'
java:
  reference: true
  typename: 'OperationQuery'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'OperationQuery'
jni:
  translator: '::djinni_generated::OperationQuery'
  header: '"OperationQuery.hpp"'
  typename: jobject
  typeSignature: 'LOperationQuery;'
---
name: OperationType
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::OperationType'
  header: '"OperationType.hpp"'
  byValue: true
objc:
  typename: 'OperationType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"OperationType.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::OperationType, OperationType>'
  header: '"OperationType+Private.h"'
java:
  reference: true
  typename: 'OperationType'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'OperationType'
jni:
  translator: '::djinni_generated::OperationType'
  header: '"OperationType.hpp"'
  typename: jobject
  typeSignature: 'LOperationType;'
---
name: PathResolver
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::PathResolver'
  header: '"PathResolver.hpp"'
  byValue: false
objc:
  typename: 'PathResolver'
  pointer: true
  hash: '%s.hash'
  boxed: 'PathResolver'
  header: '"PathResolver.h"'
objcpp:
  translator: '::djinni_generated::PathResolver'
  header: '"PathResolver+Private.h"'
java:
  reference: true
  typename: 'PathResolver'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'PathResolver'
jni:
  translator: '::djinni_generated::PathResolver'
  header: '"PathResolver.hpp"'
  typename: jobject
  typeSignature: 'LPathResolver;'
---
name: Preferences
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Preferences'
  header: '"Preferences.hpp"'
  byValue: false
objc:
  typename: 'Preferences'
  pointer: true
  hash: '%s.hash'
  boxed: 'Preferences'
  header: '"Preferences.h"'
objcpp:
  translator: '::djinni_generated::Preferences'
  header: '"Preferences+Private.h"'
java:
  reference: true
  typename: 'Preferences'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Preferences'
jni:
  translator: '::djinni_generated::Preferences'
  header: '"Preferences.hpp"'
  typename: jobject
  typeSignature: 'LPreferences;'
---
name: PreferencesEditor
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::PreferencesEditor'
  header: '"PreferencesEditor.hpp"'
  byValue: false
objc:
  typename: 'PreferencesEditor'
  pointer: true
  hash: '%s.hash'
  boxed: 'PreferencesEditor'
  header: '"PreferencesEditor.h"'
objcpp:
  translator: '::djinni_generated::PreferencesEditor'
  header: '"PreferencesEditor+Private.h"'
java:
  reference: true
  typename: 'PreferencesEditor'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'PreferencesEditor'
jni:
  translator: '::djinni_generated::PreferencesEditor'
  header: '"PreferencesEditor.hpp"'
  typename: jobject
  typeSignature: 'LPreferencesEditor;'
---
name: QueryFilter
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::QueryFilter'
  header: '"QueryFilter.hpp"'
  byValue: false
objc:
  typename: 'QueryFilter'
  pointer: true
  hash: '%s.hash'
  boxed: 'QueryFilter'
  header: '"QueryFilter.h"'
objcpp:
  translator: '::djinni_generated::QueryFilter'
  header: '"QueryFilter+Private.h"'
java:
  reference: true
  typename: 'QueryFilter'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'QueryFilter'
jni:
  translator: '::djinni_generated::QueryFilter'
  header: '"QueryFilter.hpp"'
  typename: jobject
  typeSignature: 'LQueryFilter;'
---
name: RandomNumberGenerator
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::RandomNumberGenerator'
  header: '"RandomNumberGenerator.hpp"'
  byValue: false
objc:
  typename: 'RandomNumberGenerator'
  pointer: true
  hash: '%s.hash'
  boxed: 'RandomNumberGenerator'
  header: '"RandomNumberGenerator.h"'
objcpp:
  translator: '::djinni_generated::RandomNumberGenerator'
  header: '"RandomNumberGenerator+Private.h"'
java:
  reference: true
  typename: 'RandomNumberGenerator'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'RandomNumberGenerator'
jni:
  translator: '::djinni_generated::RandomNumberGenerator'
  header: '"RandomNumberGenerator.hpp"'
  typename: jobject
  typeSignature: 'LRandomNumberGenerator;'
---
name: RoundingMode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::RoundingMode'
  header: '"RoundingMode.hpp"'
  byValue: true
objc:
  typename: 'RoundingMode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"RoundingMode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::RoundingMode, RoundingMode>'
  header: '"RoundingMode+Private.h"'
java:
  reference: true
  typename: 'RoundingMode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'RoundingMode'
jni:
  translator: '::djinni_generated::RoundingMode'
  header: '"RoundingMode.hpp"'
  typename: jobject
  typeSignature: 'LRoundingMode;'
---
name: Runnable
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Runnable'
  header: '"Runnable.hpp"'
  byValue: false
objc:
  typename: 'Runnable'
  pointer: true
  hash: '%s.hash'
  boxed: 'Runnable'
  header: '"Runnable.h"'
objcpp:
  translator: '::djinni_generated::Runnable'
  header: '"Runnable+Private.h"'
java:
  reference: true
  typename: 'Runnable'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Runnable'
jni:
  translator: '::djinni_generated::Runnable'
  header: '"Runnable.hpp"'
  typename: jobject
  typeSignature: 'LRunnable;'
---
name: Secp256k1
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Secp256k1'
  header: '"Secp256k1.hpp"'
  byValue: false
objc:
  typename: 'Secp256k1'
  pointer: true
  hash: '%s.hash'
  boxed: 'Secp256k1'
  header: '"Secp256k1.h"'
objcpp:
  translator: '::djinni_generated::Secp256k1'
  header: '"Secp256k1+Private.h"'
java:
  reference: true
  typename: 'Secp256k1'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Secp256k1'
jni:
  translator: '::djinni_generated::Secp256k1'
  header: '"Secp256k1.hpp"'
  typename: jobject
  typeSignature: 'LSecp256k1;'
---
name: SynchronizationStatus
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::SynchronizationStatus'
  header: '"SynchronizationStatus.hpp"'
  byValue: false
objc:
  typename: 'SynchronizationStatus'
  pointer: true
  hash: '%s.hash'
  boxed: 'SynchronizationStatus'
  header: '"SynchronizationStatus.h"'
objcpp:
  translator: '::djinni_generated::SynchronizationStatus'
  header: '"SynchronizationStatus+Private.h"'
java:
  reference: true
  typename: 'SynchronizationStatus'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'SynchronizationStatus'
jni:
  translator: '::djinni_generated::SynchronizationStatus'
  header: '"SynchronizationStatus.hpp"'
  typename: jobject
  typeSignature: 'LSynchronizationStatus;'
---
name: ThreadDispatcher
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ThreadDispatcher'
  header: '"ThreadDispatcher.hpp"'
  byValue: false
objc:
  typename: 'ThreadDispatcher'
  pointer: true
  hash: '%s.hash'
  boxed: 'ThreadDispatcher'
  header: '"ThreadDispatcher.h"'
objcpp:
  translator: '::djinni_generated::ThreadDispatcher'
  header: '"ThreadDispatcher+Private.h"'
java:
  reference: true
  typename: 'ThreadDispatcher'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ThreadDispatcher'
jni:
  translator: '::djinni_generated::ThreadDispatcher'
  header: '"ThreadDispatcher.hpp"'
  typename: jobject
  typeSignature: 'LThreadDispatcher;'
---
name: TimePeriod
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::TimePeriod'
  header: '"TimePeriod.hpp"'
  byValue: true
objc:
  typename: 'TimePeriod'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"TimePeriod.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::TimePeriod, TimePeriod>'
  header: '"TimePeriod+Private.h"'
java:
  reference: true
  typename: 'TimePeriod'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'TimePeriod'
jni:
  translator: '::djinni_generated::TimePeriod'
  header: '"TimePeriod.hpp"'
  typename: jobject
  typeSignature: 'LTimePeriod;'
---
name: TrustIndicator
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::TrustIndicator'
  header: '"TrustIndicator.hpp"'
  byValue: false
objc:
  typename: 'TrustIndicator'
  pointer: true
  hash: '%s.hash'
  boxed: 'TrustIndicator'
  header: '"TrustIndicator.h"'
objcpp:
  translator: '::djinni_generated::TrustIndicator'
  header: '"TrustIndicator+Private.h"'
java:
  reference: true
  typename: 'TrustIndicator'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'TrustIndicator'
jni:
  translator: '::djinni_generated::TrustIndicator'
  header: '"TrustIndicator.hpp"'
  typename: jobject
  typeSignature: 'LTrustIndicator;'
---
name: TrustLevel
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::TrustLevel'
  header: '"TrustLevel.hpp"'
  byValue: true
objc:
  typename: 'TrustLevel'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"TrustLevel.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::TrustLevel, TrustLevel>'
  header: '"TrustLevel+Private.h"'
java:
  reference: true
  typename: 'TrustLevel'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'TrustLevel'
jni:
  translator: '::djinni_generated::TrustLevel'
  header: '"TrustLevel.hpp"'
  typename: jobject
  typeSignature: 'LTrustLevel;'
---
name: Wallet
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Wallet'
  header: '"Wallet.hpp"'
  byValue: false
objc:
  typename: 'Wallet'
  pointer: true
  hash: '%s.hash'
  boxed: 'Wallet'
  header: '"Wallet.h"'
objcpp:
  translator: '::djinni_generated::Wallet'
  header: '"Wallet+Private.h"'
java:
  reference: true
  typename: 'Wallet'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Wallet'
jni:
  translator: '::djinni_generated::Wallet'
  header: '"Wallet.hpp"'
  typename: jobject
  typeSignature: 'LWallet;'
---
name: WalletType
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::WalletType'
  header: '"WalletType.hpp"'
  byValue: true
objc:
  typename: 'WalletType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"WalletType.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::WalletType, WalletType>'
  header: '"WalletType+Private.h"'
java:
  reference: true
  typename: 'WalletType'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'WalletType'
jni:
  translator: '::djinni_generated::WalletType'
  header: '"WalletType.hpp"'
  typename: jobject
  typeSignature: 'LWalletType;'
---
name: WebSocketClient
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::WebSocketClient'
  header: '"WebSocketClient.hpp"'
  byValue: false
objc:
  typename: 'WebSocketClient'
  pointer: true
  hash: '%s.hash'
  boxed: 'WebSocketClient'
  header: '"WebSocketClient.h"'
objcpp:
  translator: '::djinni_generated::WebSocketClient'
  header: '"WebSocketClient+Private.h"'
java:
  reference: true
  typename: 'WebSocketClient'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'WebSocketClient'
jni:
  translator: '::djinni_generated::WebSocketClient'
  header: '"WebSocketClient.hpp"'
  typename: jobject
  typeSignature: 'LWebSocketClient;'
---
name: WebSocketConnection
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::WebSocketConnection'
  header: '"WebSocketConnection.hpp"'
  byValue: false
objc:
  typename: 'WebSocketConnection'
  pointer: true
  hash: '%s.hash'
  boxed: 'WebSocketConnection'
  header: '"WebSocketConnection.h"'
objcpp:
  translator: '::djinni_generated::WebSocketConnection'
  header: '"WebSocketConnection+Private.h"'
java:
  reference: true
  typename: 'WebSocketConnection'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'WebSocketConnection'
jni:
  translator: '::djinni_generated::WebSocketConnection'
  header: '"WebSocketConnection.hpp"'
  typename: jobject
  typeSignature: 'LWebSocketConnection;'
