# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from address.djinni, amount.djinni, big_int.djinni, currency.djinni, dynamic.djinni, error.djinni, locale.djinni
---
name: Address
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Address'
  header: '"Address.hpp"'
  byValue: false
objc:
  typename: 'Address'
  pointer: true
  hash: '%s.hash'
  boxed: 'Address'
  header: '"Address.h"'
objcpp:
  translator: '::djinni_generated::Address'
  header: '"Address+Private.h"'
java:
  reference: true
  typename: 'Address'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Address'
jni:
  translator: '::djinni_generated::Address'
  header: '"Address.hpp"'
  typename: jobject
  typeSignature: 'LAddress;'
---
name: Amount
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Amount'
  header: '"Amount.hpp"'
  byValue: false
objc:
  typename: 'Amount'
  pointer: true
  hash: '%s.hash'
  boxed: 'Amount'
  header: '"Amount.h"'
objcpp:
  translator: '::djinni_generated::Amount'
  header: '"Amount+Private.h"'
java:
  reference: true
  typename: 'Amount'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Amount'
jni:
  translator: '::djinni_generated::Amount'
  header: '"Amount.hpp"'
  typename: jobject
  typeSignature: 'LAmount;'
---
name: BigInt
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::BigInt'
  header: '"BigInt.hpp"'
  byValue: false
objc:
  typename: 'BigInt'
  pointer: true
  hash: '%s.hash'
  boxed: 'BigInt'
  header: '"BigInt.h"'
objcpp:
  translator: '::djinni_generated::BigInt'
  header: '"BigInt+Private.h"'
java:
  reference: true
  typename: 'BigInt'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'BigInt'
jni:
  translator: '::djinni_generated::BigInt'
  header: '"BigInt.hpp"'
  typename: jobject
  typeSignature: 'LBigInt;'
---
name: Currency
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Currency'
  header: '"Currency.hpp"'
  byValue: false
objc:
  typename: 'Currency'
  pointer: true
  hash: '%s.hash'
  boxed: 'Currency'
  header: '"Currency.h"'
objcpp:
  translator: '::djinni_generated::Currency'
  header: '"Currency+Private.h"'
java:
  reference: true
  typename: 'Currency'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Currency'
jni:
  translator: '::djinni_generated::Currency'
  header: '"Currency.hpp"'
  typename: jobject
  typeSignature: 'LCurrency;'
---
name: CurrencyUnit
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::CurrencyUnit'
  header: '"CurrencyUnit.hpp"'
  byValue: false
objc:
  typename: 'CurrencyUnit'
  pointer: true
  hash: '%s.hash'
  boxed: 'CurrencyUnit'
  header: '"CurrencyUnit.h"'
objcpp:
  translator: '::djinni_generated::CurrencyUnit'
  header: '"CurrencyUnit+Private.h"'
java:
  reference: true
  typename: 'CurrencyUnit'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'CurrencyUnit'
jni:
  translator: '::djinni_generated::CurrencyUnit'
  header: '"CurrencyUnit.hpp"'
  typename: jobject
  typeSignature: 'LCurrencyUnit;'
---
name: DynamicArray
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicArray'
  header: '"DynamicArray.hpp"'
  byValue: false
objc:
  typename: 'DynamicArray'
  pointer: true
  hash: '%s.hash'
  boxed: 'DynamicArray'
  header: '"DynamicArray.h"'
objcpp:
  translator: '::djinni_generated::DynamicArray'
  header: '"DynamicArray+Private.h"'
java:
  reference: true
  typename: 'DynamicArray'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicArray'
jni:
  translator: '::djinni_generated::DynamicArray'
  header: '"DynamicArray.hpp"'
  typename: jobject
  typeSignature: 'LDynamicArray;'
---
name: DynamicObject
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicObject'
  header: '"DynamicObject.hpp"'
  byValue: false
objc:
  typename: 'DynamicObject'
  pointer: true
  hash: '%s.hash'
  boxed: 'DynamicObject'
  header: '"DynamicObject.h"'
objcpp:
  translator: '::djinni_generated::DynamicObject'
  header: '"DynamicObject+Private.h"'
java:
  reference: true
  typename: 'DynamicObject'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicObject'
jni:
  translator: '::djinni_generated::DynamicObject'
  header: '"DynamicObject.hpp"'
  typename: jobject
  typeSignature: 'LDynamicObject;'
---
name: DynamicType
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicType'
  header: '"DynamicType.hpp"'
  byValue: true
objc:
  typename: 'DynamicType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"DynamicType.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::DynamicType, DynamicType>'
  header: '"DynamicType+Private.h"'
java:
  reference: true
  typename: 'DynamicType'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicType'
jni:
  translator: '::djinni_generated::DynamicType'
  header: '"DynamicType.hpp"'
  typename: jobject
  typeSignature: 'LDynamicType;'
---
name: Error
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Error'
  header: '"Error.hpp"'
  byValue: false
objc:
  typename: 'Error'
  pointer: true
  hash: '%s.hash'
  boxed: 'Error'
  header: '"Error.h"'
objcpp:
  translator: '::djinni_generated::Error'
  header: '"Error+Private.h"'
java:
  reference: true
  typename: 'Error'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Error'
jni:
  translator: '::djinni_generated::Error'
  header: '"Error.hpp"'
  typename: jobject
  typeSignature: 'LError;'
---
name: ErrorCode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ErrorCode'
  header: '"ErrorCode.hpp"'
  byValue: true
objc:
  typename: 'ErrorCode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"ErrorCode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::ErrorCode, ErrorCode>'
  header: '"ErrorCode+Private.h"'
java:
  reference: true
  typename: 'ErrorCode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ErrorCode'
jni:
  translator: '::djinni_generated::ErrorCode'
  header: '"ErrorCode.hpp"'
  typename: jobject
  typeSignature: 'LErrorCode;'
---
name: FormatRules
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::FormatRules'
  header: '"FormatRules.hpp"'
  byValue: false
objc:
  typename: 'FormatRules'
  pointer: true
  hash: '%s.hash'
  boxed: 'FormatRules'
  header: '"FormatRules.h"'
objcpp:
  translator: '::djinni_generated::FormatRules'
  header: '"FormatRules+Private.h"'
java:
  reference: true
  typename: 'FormatRules'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'FormatRules'
jni:
  translator: '::djinni_generated::FormatRules'
  header: '"FormatRules.hpp"'
  typename: jobject
  typeSignature: 'LFormatRules;'
---
name: Locale
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Locale'
  header: '"Locale.hpp"'
  byValue: false
objc:
  typename: 'Locale'
  pointer: true
  hash: '%s.hash'
  boxed: 'Locale'
  header: '"Locale.h"'
objcpp:
  translator: '::djinni_generated::Locale'
  header: '"Locale+Private.h"'
java:
  reference: true
  typename: 'Locale'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Locale'
jni:
  translator: '::djinni_generated::Locale'
  header: '"Locale.hpp"'
  typename: jobject
  typeSignature: 'LLocale;'
---
name: RoundingMode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::RoundingMode'
  header: '"RoundingMode.hpp"'
  byValue: true
objc:
  typename: 'RoundingMode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"RoundingMode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::RoundingMode, RoundingMode>'
  header: '"RoundingMode+Private.h"'
java:
  reference: true
  typename: 'RoundingMode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'RoundingMode'
jni:
  translator: '::djinni_generated::RoundingMode'
  header: '"RoundingMode.hpp"'
  typename: jobject
  typeSignature: 'LRoundingMode;'
