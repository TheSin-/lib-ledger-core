# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from address.djinni, amount.djinni, big_int.djinni, currency.djinni, dynamic.djinni, error.djinni, events.djinni, locale.djinni, logger.djinni, operation.djinni, preferences.djinni, thread_dispatcher.djinni, time_period.djinni, trust.djinni
---
name: Address
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Address'
  header: '"Address.hpp"'
  byValue: false
objc:
  typename: 'Address'
  pointer: true
  hash: '%s.hash'
  boxed: 'Address'
  header: '"Address.h"'
objcpp:
  translator: '::djinni_generated::Address'
  header: '"Address+Private.h"'
java:
  reference: true
  typename: 'Address'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Address'
jni:
  translator: '::djinni_generated::Address'
  header: '"Address.hpp"'
  typename: jobject
  typeSignature: 'LAddress;'
---
name: Amount
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Amount'
  header: '"Amount.hpp"'
  byValue: false
objc:
  typename: 'Amount'
  pointer: true
  hash: '%s.hash'
  boxed: 'Amount'
  header: '"Amount.h"'
objcpp:
  translator: '::djinni_generated::Amount'
  header: '"Amount+Private.h"'
java:
  reference: true
  typename: 'Amount'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Amount'
jni:
  translator: '::djinni_generated::Amount'
  header: '"Amount.hpp"'
  typename: jobject
  typeSignature: 'LAmount;'
---
name: BigInt
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::BigInt'
  header: '"BigInt.hpp"'
  byValue: false
objc:
  typename: 'BigInt'
  pointer: true
  hash: '%s.hash'
  boxed: 'BigInt'
  header: '"BigInt.h"'
objcpp:
  translator: '::djinni_generated::BigInt'
  header: '"BigInt+Private.h"'
java:
  reference: true
  typename: 'BigInt'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'BigInt'
jni:
  translator: '::djinni_generated::BigInt'
  header: '"BigInt.hpp"'
  typename: jobject
  typeSignature: 'LBigInt;'
---
name: Currency
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Currency'
  header: '"Currency.hpp"'
  byValue: false
objc:
  typename: 'Currency'
  pointer: true
  hash: '%s.hash'
  boxed: 'Currency'
  header: '"Currency.h"'
objcpp:
  translator: '::djinni_generated::Currency'
  header: '"Currency+Private.h"'
java:
  reference: true
  typename: 'Currency'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Currency'
jni:
  translator: '::djinni_generated::Currency'
  header: '"Currency.hpp"'
  typename: jobject
  typeSignature: 'LCurrency;'
---
name: CurrencyUnit
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::CurrencyUnit'
  header: '"CurrencyUnit.hpp"'
  byValue: false
objc:
  typename: 'CurrencyUnit'
  pointer: true
  hash: '%s.hash'
  boxed: 'CurrencyUnit'
  header: '"CurrencyUnit.h"'
objcpp:
  translator: '::djinni_generated::CurrencyUnit'
  header: '"CurrencyUnit+Private.h"'
java:
  reference: true
  typename: 'CurrencyUnit'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'CurrencyUnit'
jni:
  translator: '::djinni_generated::CurrencyUnit'
  header: '"CurrencyUnit.hpp"'
  typename: jobject
  typeSignature: 'LCurrencyUnit;'
---
name: DynamicArray
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicArray'
  header: '"DynamicArray.hpp"'
  byValue: false
objc:
  typename: 'DynamicArray'
  pointer: true
  hash: '%s.hash'
  boxed: 'DynamicArray'
  header: '"DynamicArray.h"'
objcpp:
  translator: '::djinni_generated::DynamicArray'
  header: '"DynamicArray+Private.h"'
java:
  reference: true
  typename: 'DynamicArray'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicArray'
jni:
  translator: '::djinni_generated::DynamicArray'
  header: '"DynamicArray.hpp"'
  typename: jobject
  typeSignature: 'LDynamicArray;'
---
name: DynamicObject
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicObject'
  header: '"DynamicObject.hpp"'
  byValue: false
objc:
  typename: 'DynamicObject'
  pointer: true
  hash: '%s.hash'
  boxed: 'DynamicObject'
  header: '"DynamicObject.h"'
objcpp:
  translator: '::djinni_generated::DynamicObject'
  header: '"DynamicObject+Private.h"'
java:
  reference: true
  typename: 'DynamicObject'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicObject'
jni:
  translator: '::djinni_generated::DynamicObject'
  header: '"DynamicObject.hpp"'
  typename: jobject
  typeSignature: 'LDynamicObject;'
---
name: DynamicType
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::DynamicType'
  header: '"DynamicType.hpp"'
  byValue: true
objc:
  typename: 'DynamicType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"DynamicType.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::DynamicType, DynamicType>'
  header: '"DynamicType+Private.h"'
java:
  reference: true
  typename: 'DynamicType'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'DynamicType'
jni:
  translator: '::djinni_generated::DynamicType'
  header: '"DynamicType.hpp"'
  typename: jobject
  typeSignature: 'LDynamicType;'
---
name: Error
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Error'
  header: '"Error.hpp"'
  byValue: false
objc:
  typename: 'Error'
  pointer: true
  hash: '%s.hash'
  boxed: 'Error'
  header: '"Error.h"'
objcpp:
  translator: '::djinni_generated::Error'
  header: '"Error+Private.h"'
java:
  reference: true
  typename: 'Error'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Error'
jni:
  translator: '::djinni_generated::Error'
  header: '"Error.hpp"'
  typename: jobject
  typeSignature: 'LError;'
---
name: ErrorCode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ErrorCode'
  header: '"ErrorCode.hpp"'
  byValue: true
objc:
  typename: 'ErrorCode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"ErrorCode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::ErrorCode, ErrorCode>'
  header: '"ErrorCode+Private.h"'
java:
  reference: true
  typename: 'ErrorCode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ErrorCode'
jni:
  translator: '::djinni_generated::ErrorCode'
  header: '"ErrorCode.hpp"'
  typename: jobject
  typeSignature: 'LErrorCode;'
---
name: Event
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Event'
  header: '"Event.hpp"'
  byValue: false
objc:
  typename: 'Event'
  pointer: true
  hash: '%s.hash'
  boxed: 'Event'
  header: '"Event.h"'
objcpp:
  translator: '::djinni_generated::Event'
  header: '"Event+Private.h"'
java:
  reference: true
  typename: 'Event'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Event'
jni:
  translator: '::djinni_generated::Event'
  header: '"Event.hpp"'
  typename: jobject
  typeSignature: 'LEvent;'
---
name: EventBus
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventBus'
  header: '"EventBus.hpp"'
  byValue: false
objc:
  typename: 'EventBus'
  pointer: true
  hash: '%s.hash'
  boxed: 'EventBus'
  header: '"EventBus.h"'
objcpp:
  translator: '::djinni_generated::EventBus'
  header: '"EventBus+Private.h"'
java:
  reference: true
  typename: 'EventBus'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventBus'
jni:
  translator: '::djinni_generated::EventBus'
  header: '"EventBus.hpp"'
  typename: jobject
  typeSignature: 'LEventBus;'
---
name: EventCode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventCode'
  header: '"EventCode.hpp"'
  byValue: true
objc:
  typename: 'EventCode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"EventCode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::EventCode, EventCode>'
  header: '"EventCode+Private.h"'
java:
  reference: true
  typename: 'EventCode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventCode'
jni:
  translator: '::djinni_generated::EventCode'
  header: '"EventCode.hpp"'
  typename: jobject
  typeSignature: 'LEventCode;'
---
name: EventPublisher
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventPublisher'
  header: '"EventPublisher.hpp"'
  byValue: false
objc:
  typename: 'EventPublisher'
  pointer: true
  hash: '%s.hash'
  boxed: 'EventPublisher'
  header: '"EventPublisher.h"'
objcpp:
  translator: '::djinni_generated::EventPublisher'
  header: '"EventPublisher+Private.h"'
java:
  reference: true
  typename: 'EventPublisher'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventPublisher'
jni:
  translator: '::djinni_generated::EventPublisher'
  header: '"EventPublisher.hpp"'
  typename: jobject
  typeSignature: 'LEventPublisher;'
---
name: EventReceiver
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::EventReceiver'
  header: '"EventReceiver.hpp"'
  byValue: false
objc:
  typename: 'EventReceiver'
  pointer: true
  hash: '%s.hash'
  boxed: 'EventReceiver'
  header: '"EventReceiver.h"'
objcpp:
  translator: '::djinni_generated::EventReceiver'
  header: '"EventReceiver+Private.h"'
java:
  reference: true
  typename: 'EventReceiver'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'EventReceiver'
jni:
  translator: '::djinni_generated::EventReceiver'
  header: '"EventReceiver.hpp"'
  typename: jobject
  typeSignature: 'LEventReceiver;'
---
name: ExecutionContext
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ExecutionContext'
  header: '"ExecutionContext.hpp"'
  byValue: false
objc:
  typename: 'ExecutionContext'
  pointer: true
  hash: '%s.hash'
  boxed: 'ExecutionContext'
  header: '"ExecutionContext.h"'
objcpp:
  translator: '::djinni_generated::ExecutionContext'
  header: '"ExecutionContext+Private.h"'
java:
  reference: true
  typename: 'ExecutionContext'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ExecutionContext'
jni:
  translator: '::djinni_generated::ExecutionContext'
  header: '"ExecutionContext.hpp"'
  typename: jobject
  typeSignature: 'LExecutionContext;'
---
name: FormatRules
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::FormatRules'
  header: '"FormatRules.hpp"'
  byValue: false
objc:
  typename: 'FormatRules'
  pointer: true
  hash: '%s.hash'
  boxed: 'FormatRules'
  header: '"FormatRules.h"'
objcpp:
  translator: '::djinni_generated::FormatRules'
  header: '"FormatRules+Private.h"'
java:
  reference: true
  typename: 'FormatRules'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'FormatRules'
jni:
  translator: '::djinni_generated::FormatRules'
  header: '"FormatRules.hpp"'
  typename: jobject
  typeSignature: 'LFormatRules;'
---
name: Locale
typedef: 'record'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Locale'
  header: '"Locale.hpp"'
  byValue: false
objc:
  typename: 'Locale'
  pointer: true
  hash: '%s.hash'
  boxed: 'Locale'
  header: '"Locale.h"'
objcpp:
  translator: '::djinni_generated::Locale'
  header: '"Locale+Private.h"'
java:
  reference: true
  typename: 'Locale'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Locale'
jni:
  translator: '::djinni_generated::Locale'
  header: '"Locale.hpp"'
  typename: jobject
  typeSignature: 'LLocale;'
---
name: Lock
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Lock'
  header: '"Lock.hpp"'
  byValue: false
objc:
  typename: 'Lock'
  pointer: true
  hash: '%s.hash'
  boxed: 'Lock'
  header: '"Lock.h"'
objcpp:
  translator: '::djinni_generated::Lock'
  header: '"Lock+Private.h"'
java:
  reference: true
  typename: 'Lock'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Lock'
jni:
  translator: '::djinni_generated::Lock'
  header: '"Lock.hpp"'
  typename: jobject
  typeSignature: 'LLock;'
---
name: LogPrinter
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::LogPrinter'
  header: '"LogPrinter.hpp"'
  byValue: false
objc:
  typename: 'LogPrinter'
  pointer: true
  hash: '%s.hash'
  boxed: 'LogPrinter'
  header: '"LogPrinter.h"'
objcpp:
  translator: '::djinni_generated::LogPrinter'
  header: '"LogPrinter+Private.h"'
java:
  reference: true
  typename: 'LogPrinter'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'LogPrinter'
jni:
  translator: '::djinni_generated::LogPrinter'
  header: '"LogPrinter.hpp"'
  typename: jobject
  typeSignature: 'LLogPrinter;'
---
name: Logger
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Logger'
  header: '"Logger.hpp"'
  byValue: false
objc:
  typename: 'Logger'
  pointer: true
  hash: '%s.hash'
  boxed: 'Logger'
  header: '"Logger.h"'
objcpp:
  translator: '::djinni_generated::Logger'
  header: '"Logger+Private.h"'
java:
  reference: true
  typename: 'Logger'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Logger'
jni:
  translator: '::djinni_generated::Logger'
  header: '"Logger.hpp"'
  typename: jobject
  typeSignature: 'LLogger;'
---
name: Operation
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Operation'
  header: '"Operation.hpp"'
  byValue: false
objc:
  typename: 'Operation'
  pointer: true
  hash: '%s.hash'
  boxed: 'Operation'
  header: '"Operation.h"'
objcpp:
  translator: '::djinni_generated::Operation'
  header: '"Operation+Private.h"'
java:
  reference: true
  typename: 'Operation'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Operation'
jni:
  translator: '::djinni_generated::Operation'
  header: '"Operation.hpp"'
  typename: jobject
  typeSignature: 'LOperation;'
---
name: OperationOrderKey
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::OperationOrderKey'
  header: '"OperationOrderKey.hpp"'
  byValue: true
objc:
  typename: 'OperationOrderKey'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"OperationOrderKey.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::OperationOrderKey, OperationOrderKey>'
  header: '"OperationOrderKey+Private.h"'
java:
  reference: true
  typename: 'OperationOrderKey'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'OperationOrderKey'
jni:
  translator: '::djinni_generated::OperationOrderKey'
  header: '"OperationOrderKey.hpp"'
  typename: jobject
  typeSignature: 'LOperationOrderKey;'
---
name: OperationQuery
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::OperationQuery'
  header: '"OperationQuery.hpp"'
  byValue: false
objc:
  typename: 'OperationQuery'
  pointer: true
  hash: '%s.hash'
  boxed: 'OperationQuery'
  header: '"OperationQuery.h"'
objcpp:
  translator: '::djinni_generated::OperationQuery'
  header: '"OperationQuery+Private.h"'
java:
  reference: true
  typename: 'OperationQuery'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'OperationQuery'
jni:
  translator: '::djinni_generated::OperationQuery'
  header: '"OperationQuery.hpp"'
  typename: jobject
  typeSignature: 'LOperationQuery;'
---
name: OperationType
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::OperationType'
  header: '"OperationType.hpp"'
  byValue: true
objc:
  typename: 'OperationType'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"OperationType.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::OperationType, OperationType>'
  header: '"OperationType+Private.h"'
java:
  reference: true
  typename: 'OperationType'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'OperationType'
jni:
  translator: '::djinni_generated::OperationType'
  header: '"OperationType.hpp"'
  typename: jobject
  typeSignature: 'LOperationType;'
---
name: Preferences
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Preferences'
  header: '"Preferences.hpp"'
  byValue: false
objc:
  typename: 'Preferences'
  pointer: true
  hash: '%s.hash'
  boxed: 'Preferences'
  header: '"Preferences.h"'
objcpp:
  translator: '::djinni_generated::Preferences'
  header: '"Preferences+Private.h"'
java:
  reference: true
  typename: 'Preferences'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Preferences'
jni:
  translator: '::djinni_generated::Preferences'
  header: '"Preferences.hpp"'
  typename: jobject
  typeSignature: 'LPreferences;'
---
name: PreferencesEditor
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::PreferencesEditor'
  header: '"PreferencesEditor.hpp"'
  byValue: false
objc:
  typename: 'PreferencesEditor'
  pointer: true
  hash: '%s.hash'
  boxed: 'PreferencesEditor'
  header: '"PreferencesEditor.h"'
objcpp:
  translator: '::djinni_generated::PreferencesEditor'
  header: '"PreferencesEditor+Private.h"'
java:
  reference: true
  typename: 'PreferencesEditor'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'PreferencesEditor'
jni:
  translator: '::djinni_generated::PreferencesEditor'
  header: '"PreferencesEditor.hpp"'
  typename: jobject
  typeSignature: 'LPreferencesEditor;'
---
name: QueryFilter
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::QueryFilter'
  header: '"QueryFilter.hpp"'
  byValue: false
objc:
  typename: 'QueryFilter'
  pointer: true
  hash: '%s.hash'
  boxed: 'QueryFilter'
  header: '"QueryFilter.h"'
objcpp:
  translator: '::djinni_generated::QueryFilter'
  header: '"QueryFilter+Private.h"'
java:
  reference: true
  typename: 'QueryFilter'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'QueryFilter'
jni:
  translator: '::djinni_generated::QueryFilter'
  header: '"QueryFilter.hpp"'
  typename: jobject
  typeSignature: 'LQueryFilter;'
---
name: RoundingMode
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::RoundingMode'
  header: '"RoundingMode.hpp"'
  byValue: true
objc:
  typename: 'RoundingMode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"RoundingMode.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::RoundingMode, RoundingMode>'
  header: '"RoundingMode+Private.h"'
java:
  reference: true
  typename: 'RoundingMode'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'RoundingMode'
jni:
  translator: '::djinni_generated::RoundingMode'
  header: '"RoundingMode.hpp"'
  typename: jobject
  typeSignature: 'LRoundingMode;'
---
name: Runnable
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::Runnable'
  header: '"Runnable.hpp"'
  byValue: false
objc:
  typename: 'Runnable'
  pointer: true
  hash: '%s.hash'
  boxed: 'Runnable'
  header: '"Runnable.h"'
objcpp:
  translator: '::djinni_generated::Runnable'
  header: '"Runnable+Private.h"'
java:
  reference: true
  typename: 'Runnable'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'Runnable'
jni:
  translator: '::djinni_generated::Runnable'
  header: '"Runnable.hpp"'
  typename: jobject
  typeSignature: 'LRunnable;'
---
name: ThreadDispatcher
typedef: 'interface +o +j'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::ThreadDispatcher'
  header: '"ThreadDispatcher.hpp"'
  byValue: false
objc:
  typename: 'ThreadDispatcher'
  pointer: true
  hash: '%s.hash'
  boxed: 'ThreadDispatcher'
  header: '"ThreadDispatcher.h"'
objcpp:
  translator: '::djinni_generated::ThreadDispatcher'
  header: '"ThreadDispatcher+Private.h"'
java:
  reference: true
  typename: 'ThreadDispatcher'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'ThreadDispatcher'
jni:
  translator: '::djinni_generated::ThreadDispatcher'
  header: '"ThreadDispatcher.hpp"'
  typename: jobject
  typeSignature: 'LThreadDispatcher;'
---
name: TimePeriod
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::TimePeriod'
  header: '"TimePeriod.hpp"'
  byValue: true
objc:
  typename: 'TimePeriod'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"TimePeriod.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::TimePeriod, TimePeriod>'
  header: '"TimePeriod+Private.h"'
java:
  reference: true
  typename: 'TimePeriod'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'TimePeriod'
jni:
  translator: '::djinni_generated::TimePeriod'
  header: '"TimePeriod.hpp"'
  typename: jobject
  typeSignature: 'LTimePeriod;'
---
name: TrustIndicator
typedef: 'interface +c'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::TrustIndicator'
  header: '"TrustIndicator.hpp"'
  byValue: false
objc:
  typename: 'TrustIndicator'
  pointer: true
  hash: '%s.hash'
  boxed: 'TrustIndicator'
  header: '"TrustIndicator.h"'
objcpp:
  translator: '::djinni_generated::TrustIndicator'
  header: '"TrustIndicator+Private.h"'
java:
  reference: true
  typename: 'TrustIndicator'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'TrustIndicator'
jni:
  translator: '::djinni_generated::TrustIndicator'
  header: '"TrustIndicator.hpp"'
  typename: jobject
  typeSignature: 'LTrustIndicator;'
---
name: TrustLevel
typedef: 'enum'
params: []
prefix: ""
cpp:
  typename: '::ledger::core::api::TrustLevel'
  header: '"TrustLevel.hpp"'
  byValue: true
objc:
  typename: 'TrustLevel'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"TrustLevel.h"'
objcpp:
  translator: '::djinni::Enum<::ledger::core::api::TrustLevel, TrustLevel>'
  header: '"TrustLevel+Private.h"'
java:
  reference: true
  typename: 'TrustLevel'
  writeToParcel: '%s.writeToParcel(out, flags)'
  generic: true
  readFromParcel: 'new %s(in)'
  hash: '%s.hashCode()'
  boxed: 'TrustLevel'
jni:
  translator: '::djinni_generated::TrustLevel'
  header: '"TrustLevel.hpp"'
  typename: jobject
  typeSignature: 'LTrustLevel;'
